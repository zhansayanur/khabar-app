import "./globals.css";
import type { Metadata } from "next";
import { Open_Sans } from "next/font/google";
import { ClerkProvider } from '@clerk/nextjs';
import { enUS } from '@clerk/localizations';

import { cn } from "@/lib/utils";
import { ThemeProvider } from "@/components/providers/theme-provider";
import { ModalProvider } from "@/components/providers/modal-provider";
import { SocketProvider } from "@/components/providers/socket-provider";
import { QueryProvider } from "@/components/providers/query-provider";



const font = Open_Sans({
  subsets: ['latin']
});

const localization = {
  ...enUS, 
  signUp: {
    start: {
      title: 'Жаңа аккаунт',
      subtitle: '{{applicationName}} жалғастыру үшін тіркелу керек',
      actionText: 'Аккаунт бар ма?',
      actionLink: 'Кіру',
    },
    emailLink: {
      title: 'Поштаңызды растаңыз',
      subtitle: '{{applicationName}} жалғастыру үшін',
      resendButton: 'Хат алмадыңыз ба? Қайта жіберу',
    },
  },

  dividerText: 'немесе',
  formFieldLabel__username: 'Пайдаланушы аты',
  formFieldLabel__emailAddress: 'Пошта',
  formFieldInputPlaceholder__emailAddress: 'Поштаңызды енгізіңіз',
  formFieldLabel__password: 'Құпия сөз',
  formFieldInputPlaceholder__password: 'Құпия сөзді енгізіңіз',
  formButtonPrimary: 'Жалғастыру',
  formFieldLabel__emailAddress_username: 'Пошта немесе пайдаланушы аты',
  formFieldInputPlaceholder__emailAddress_username: 'Пошта немесе пайдаланушы атын енгізіңіз',
  socialButtonsBlockButton: '{{provider|titleize}} арқылы кіру',
  form_param_format_invalid: 'Енгізілген сөз қате форматта. Тексеріп, түзетіңіз.',

  signIn: {
    start: {
      actionLink: 'Тіркелу',
      actionText: 'Аккаунт жоқ па?',
      subtitle: 'Қош келдіңіз! Жалғастыру үшін аккаунтыңызға кіріңіз',
      subtitleCombined: undefined,
      title: '{{applicationName}} кіру',
    },
  }
};


export const metadata: Metadata = {
  title: "Khabar App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <ClerkProvider localization={localization} >
      <html lang="en" suppressHydrationWarning>
        <body className={cn(
          font.className,
          "bg-white dark:bg-[#0F172B]"
        )}>
          <ThemeProvider
            attribute="class"
            defaultTheme="dark"
            enableSystem={false}
            storageKey="khabar-theme"
          >
            <SocketProvider>
              <ModalProvider />
              <QueryProvider>
                {children}
              </QueryProvider>
            </SocketProvider>
          </ThemeProvider>

        </body>
      </html>
    </ClerkProvider>
  );
}
